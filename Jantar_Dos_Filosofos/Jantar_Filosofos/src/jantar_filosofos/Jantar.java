/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package jantar_filosofos;

import java.awt.Color;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author StackHolder
 */
public class Jantar extends javax.swing.JFrame {

    Color pensando = Color.yellow;
    Color comendo = Color.green;
    Color faminto = Color.red;
    Garfos garfos = new Garfos();
    private int vezesFilosofo1Comeu = 0;
    private int vezesFilosofo2Comeu = 0;
    private int vezesFilosofo3Comeu = 0;
    private int vezesFilosofo4Comeu = 0;
    private int vezesFilosofo5Comeu = 0;
    private double inicioAplicacao;
    private double tempoQuandoComeFilosofo1 = 0.0;
    private double tempoQuandoComeFilosofo2 = 0.0;
    private double tempoQuandoComeFilosofo3 = 0.0;
    private double tempoQuandoComeFilosofo4 = 0.0;
    private double tempoQuandoComeFilosofo5 = 0.0;
    private double tempoEsperaTotalFiloso1 = 0.0;
    private double tempoEsperaTotalFiloso2 = 0.0;
    private double tempoEsperaTotalFiloso3 = 0.0;
    private double tempoEsperaTotalFiloso4 = 0.0;
    private double tempoEsperaTotalFiloso5 = 0.0;
    private double tempoEsperaMaximoFilosofo1 = -1.0;
    private double tempoEsperaMaximoFilosofo2 = -1.0;
    private double tempoEsperaMaximoFilosofo3 = -1.0;
    private double tempoEsperaMaximoFilosofo4 = -1.0;
    private double tempoEsperaMaximoFilosofo5 = -1.0;
    private double maiorTempoMedioEsperaFilosofo1 = -1.0;
    private double maiorTempoMedioEsperaFilosofo2 = -1.0;
    private double maiorTempoMedioEsperaFilosofo3 = -1.0;
    private double maiorTempoMedioEsperaFilosofo4 = -1.0;
    private double maiorTempoMedioEsperaFilosofo5 = -1.0;
    private int quantidadeTemposEsperaF1=0;
    private int quantidadeTemposEsperaF2=0;
    private int quantidadeTemposEsperaF3=0;
    private int quantidadeTemposEsperaF4=0;
    private int quantidadeTemposEsperaF5=0;
    private Filosofos fi0, fi1, fi2, fi3, fi4;

    /**
     * Creates new form Jantar
     */
    public Jantar() {
         
        System.out.println("Inicio");
        initComponents();
        this.Filosofo1.removeActionListener(null);
        this.Filosofo2.removeActionListener(null);
        this.Filosofo3.removeActionListener(null);
        this.Filosofo4.removeActionListener(null);
        this.Filosofo5.removeActionListener(null);
        fi0 = new Filosofos(0, this);
        fi1 = new Filosofos(1, this);
        fi2 = new Filosofos(2, this);
        fi3 = new Filosofos(3, this);
        fi4 = new Filosofos(4, this);
        fi0.start();
        fi1.start();
        fi2.start();
        fi3.start();
        fi4.start();
        inicioAplicacao = System.currentTimeMillis();



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Filosofo5 = new javax.swing.JToggleButton();
        Filosofo2 = new javax.swing.JToggleButton();
        Filosofo4 = new javax.swing.JToggleButton();
        Filosofo3 = new javax.swing.JToggleButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Filosofo1 = new javax.swing.JButton();
        EstadoFilosofo2 = new javax.swing.JLabel();
        EstadoFilosofo3 = new javax.swing.JLabel();
        EstadoFilosofo4 = new javax.swing.JLabel();
        EstadoFilosofo5 = new javax.swing.JLabel();
        EstadoFilosofo1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        LabelFilosofo1 = new javax.swing.JLabel();
        LabelFilosofo2 = new javax.swing.JLabel();
        LabelFilosofo3 = new javax.swing.JLabel();
        LabelFilosofo4 = new javax.swing.JLabel();
        LabelFilosofo5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        QuantidadeVezesFilosofo1Comeu = new javax.swing.JLabel();
        QuantidadeVezesFilosofo2Comeu = new javax.swing.JLabel();
        QuantidadeVezesFilosofo3Comeu = new javax.swing.JLabel();
        QuantidadeVezesFilosofo4Comeu = new javax.swing.JLabel();
        QuantidadeVezesFilosofo5Comeu = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        TempoDeExecucao = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        TempoEsperaFilosofo1 = new javax.swing.JLabel();
        TempoEsperaFilosofo2 = new javax.swing.JLabel();
        TempoEsperaFilosofo3 = new javax.swing.JLabel();
        TempoEsperaFilosofo4 = new javax.swing.JLabel();
        TempoEsperaFilosofo5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        TempoMedioSemComerFilosofo1 = new javax.swing.JLabel();
        TempoMedioSemComerFilosofo2 = new javax.swing.JLabel();
        TempoMedioSemComerFilosofo3 = new javax.swing.JLabel();
        TempoMedioSemComerFilosofo4 = new javax.swing.JLabel();
        TempoMedioSemComerFilosofo5 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jantar dos Filósofos ");

        Filosofo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filosofo2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Filósofo 1");

        jLabel2.setText("Filósofo 5");

        jLabel3.setText("Filósofo 2");

        jLabel4.setText("Filósofo 4");

        jLabel5.setText("Filósofo 3");

        Filosofo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Filosofo1ActionPerformed(evt);
            }
        });

        EstadoFilosofo2.setText("Pensando");

        EstadoFilosofo3.setText("Pensando");

        EstadoFilosofo4.setText("Pensando");

        EstadoFilosofo5.setText("Pensando");

        EstadoFilosofo1.setText("Pensando");

        jSeparator1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Relatório Geral", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, null, new java.awt.Color(0, 0, 0)));

        LabelFilosofo1.setText("Filósofo 1");

        LabelFilosofo2.setText("Filósofo 2");

        LabelFilosofo3.setText("Filósofo 3");

        LabelFilosofo4.setText("Filósofo 4");

        LabelFilosofo5.setText("Filósofo 5");

        jLabel9.setText("Vezes em que");

        jLabel10.setText("Comeu");

        jLabel11.setText("Tempo Sem");

        jLabel12.setText("Comer");

        jLabel13.setText("Tempo Médio");

        jLabel14.setText("Sem Comer");

        QuantidadeVezesFilosofo1Comeu.setText("0");

        QuantidadeVezesFilosofo2Comeu.setText("0");

        QuantidadeVezesFilosofo3Comeu.setText("0");

        QuantidadeVezesFilosofo4Comeu.setText("0");

        QuantidadeVezesFilosofo5Comeu.setText("0");

        jSeparator2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1), "Tempo da Aplicação", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.ABOVE_TOP, null, new java.awt.Color(0, 0, 0)));

        TempoDeExecucao.setText("0");

        jLabel6.setText("segundos");

        TempoEsperaFilosofo1.setText("0");

        TempoEsperaFilosofo2.setText("0");

        TempoEsperaFilosofo3.setText("0");

        TempoEsperaFilosofo4.setText("0");

        TempoEsperaFilosofo5.setText("0");

        jLabel7.setText("ms");

        jLabel8.setText("ms");

        jLabel15.setText("ms");

        jLabel16.setText("ms");

        jLabel17.setText("ms");

        TempoMedioSemComerFilosofo1.setText("0");

        TempoMedioSemComerFilosofo2.setText("0");

        TempoMedioSemComerFilosofo3.setText("0");

        TempoMedioSemComerFilosofo4.setText("0");

        TempoMedioSemComerFilosofo5.setText("0");

        jLabel18.setText("ms");

        jLabel19.setText("ms");

        jLabel20.setText("ms");

        jLabel21.setText("ms");

        jLabel22.setText("ms");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Filosofo4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(17, 17, 17)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(EstadoFilosofo5)
                                            .addComponent(jLabel2)))
                                    .addComponent(Filosofo5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Filosofo1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EstadoFilosofo4)
                            .addComponent(jLabel4))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(EstadoFilosofo3))
                        .addGap(86, 86, 86))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Filosofo3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Filosofo2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(EstadoFilosofo2))
                        .addGap(85, 85, 85))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(161, 161, 161)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(EstadoFilosofo1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(LabelFilosofo2)
                                    .addComponent(LabelFilosofo3)
                                    .addComponent(LabelFilosofo1)
                                    .addComponent(LabelFilosofo4)
                                    .addComponent(LabelFilosofo5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(QuantidadeVezesFilosofo1Comeu)
                                            .addComponent(jLabel10)
                                            .addComponent(QuantidadeVezesFilosofo2Comeu)
                                            .addComponent(QuantidadeVezesFilosofo3Comeu)
                                            .addComponent(QuantidadeVezesFilosofo4Comeu)
                                            .addComponent(QuantidadeVezesFilosofo5Comeu))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(31, 31, 31)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                            .addComponent(TempoMedioSemComerFilosofo4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 14, Short.MAX_VALUE)
                                                            .addComponent(TempoMedioSemComerFilosofo3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(TempoMedioSemComerFilosofo2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(TempoMedioSemComerFilosofo1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(TempoMedioSemComerFilosofo5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(jLabel18)
                                                            .addComponent(jLabel19)
                                                            .addComponent(jLabel20)
                                                            .addComponent(jLabel21)
                                                            .addComponent(jLabel22))
                                                        .addGap(0, 0, Short.MAX_VALUE))))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(TempoEsperaFilosofo1)
                                            .addComponent(jLabel12)
                                            .addComponent(TempoEsperaFilosofo2)
                                            .addComponent(TempoEsperaFilosofo3)
                                            .addComponent(TempoEsperaFilosofo4)
                                            .addComponent(TempoEsperaFilosofo5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel16)
                                            .addComponent(jLabel17)))))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(TempoDeExecucao)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)))))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(jLabel2)
                                .addGap(7, 7, 7)
                                .addComponent(EstadoFilosofo5))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(EstadoFilosofo2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(Filosofo5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Filosofo2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EstadoFilosofo4)
                            .addComponent(EstadoFilosofo3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Filosofo4, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Filosofo3, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EstadoFilosofo1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Filosofo1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuantidadeVezesFilosofo1Comeu)
                    .addComponent(LabelFilosofo1)
                    .addComponent(TempoEsperaFilosofo1)
                    .addComponent(jLabel7)
                    .addComponent(TempoMedioSemComerFilosofo1)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuantidadeVezesFilosofo2Comeu)
                    .addComponent(LabelFilosofo2)
                    .addComponent(TempoEsperaFilosofo2)
                    .addComponent(jLabel8)
                    .addComponent(TempoMedioSemComerFilosofo2)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuantidadeVezesFilosofo3Comeu)
                    .addComponent(LabelFilosofo3)
                    .addComponent(TempoEsperaFilosofo3)
                    .addComponent(jLabel15)
                    .addComponent(TempoMedioSemComerFilosofo3)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelFilosofo4)
                    .addComponent(QuantidadeVezesFilosofo4Comeu)
                    .addComponent(TempoEsperaFilosofo4)
                    .addComponent(jLabel16)
                    .addComponent(TempoMedioSemComerFilosofo4)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelFilosofo5)
                    .addComponent(QuantidadeVezesFilosofo5Comeu)
                    .addComponent(TempoEsperaFilosofo5)
                    .addComponent(jLabel17)
                    .addComponent(TempoMedioSemComerFilosofo5)
                    .addComponent(jLabel22))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TempoDeExecucao)
                    .addComponent(jLabel6))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        Filosofo1.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void Filosofo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filosofo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Filosofo1ActionPerformed

    private void Filosofo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Filosofo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Filosofo2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    
        
         try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Jantar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Jantar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Jantar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Jantar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
            
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Jantar jantar = new Jantar();
                jantar.setVisible(true);
                jantar.setResizable(false);
               
                
     }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EstadoFilosofo1;
    private javax.swing.JLabel EstadoFilosofo2;
    private javax.swing.JLabel EstadoFilosofo3;
    private javax.swing.JLabel EstadoFilosofo4;
    private javax.swing.JLabel EstadoFilosofo5;
    private javax.swing.JButton Filosofo1;
    private javax.swing.JToggleButton Filosofo2;
    private javax.swing.JToggleButton Filosofo3;
    private javax.swing.JToggleButton Filosofo4;
    private javax.swing.JToggleButton Filosofo5;
    private javax.swing.JLabel LabelFilosofo1;
    private javax.swing.JLabel LabelFilosofo2;
    private javax.swing.JLabel LabelFilosofo3;
    private javax.swing.JLabel LabelFilosofo4;
    private javax.swing.JLabel LabelFilosofo5;
    private javax.swing.JLabel QuantidadeVezesFilosofo1Comeu;
    private javax.swing.JLabel QuantidadeVezesFilosofo2Comeu;
    private javax.swing.JLabel QuantidadeVezesFilosofo3Comeu;
    private javax.swing.JLabel QuantidadeVezesFilosofo4Comeu;
    private javax.swing.JLabel QuantidadeVezesFilosofo5Comeu;
    private javax.swing.JLabel TempoDeExecucao;
    private javax.swing.JLabel TempoEsperaFilosofo1;
    private javax.swing.JLabel TempoEsperaFilosofo2;
    private javax.swing.JLabel TempoEsperaFilosofo3;
    private javax.swing.JLabel TempoEsperaFilosofo4;
    private javax.swing.JLabel TempoEsperaFilosofo5;
    private javax.swing.JLabel TempoMedioSemComerFilosofo1;
    private javax.swing.JLabel TempoMedioSemComerFilosofo2;
    private javax.swing.JLabel TempoMedioSemComerFilosofo3;
    private javax.swing.JLabel TempoMedioSemComerFilosofo4;
    private javax.swing.JLabel TempoMedioSemComerFilosofo5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    void setControle(int identificador, int estatus) {
        //  this.tempoSemComerFiloso1=System.currentTimeMillis();
        long tempo = System.currentTimeMillis();

        //Calcula o numero de segundos da aplicação
        double tempoAplicacao = System.currentTimeMillis() - inicioAplicacao;
        double segundos = (tempoAplicacao / 1000);
        this.TempoDeExecucao.setText(String.valueOf(segundos));


        if (identificador == 1) { //filosofo 1
            this.quantidadeTemposEsperaF1++;
            double tempoSemComer;
            //Usado para calcular tempo que esta sem comer
            if (estatus == 1) {
                this.tempoQuandoComeFilosofo1 = System.currentTimeMillis();
            } else {
                if (this.tempoQuandoComeFilosofo1 != 0) {
                    tempoSemComer = tempo - this.tempoQuandoComeFilosofo1;
                } else {
                    tempoSemComer = tempo - this.inicioAplicacao;
                }
                double seg = (tempoSemComer);
                this.TempoEsperaFilosofo1.setText(String.valueOf(seg));
                this.tempoEsperaTotalFiloso1 = this.tempoEsperaTotalFiloso1 + seg;
                DecimalFormat df = new DecimalFormat("0.000");
                this.TempoMedioSemComerFilosofo1.setText(df.format(this.tempoEsperaTotalFiloso1/this.quantidadeTemposEsperaF1));
                //Maior tempo de espera registrado
                if (seg > this.tempoEsperaMaximoFilosofo1) {
                    this.tempoEsperaMaximoFilosofo1 = seg;
                }

                //Maior média registrada de tempo de espera
                if ((this.tempoEsperaTotalFiloso1/this.quantidadeTemposEsperaF1) > this.maiorTempoMedioEsperaFilosofo1) {
                    this.maiorTempoMedioEsperaFilosofo1 = (this.tempoEsperaTotalFiloso1/this.quantidadeTemposEsperaF1);
                }

            }

            if (estatus == 0) { // pensando
                //  this.Filosofo1.   
                this.Filosofo1.setBackground(pensando);
                this.EstadoFilosofo1.setText("Pensando");
            } else {
                if (estatus == 1) {
                    this.Filosofo1.setBackground(comendo);
                    this.EstadoFilosofo1.setText("Comendo");
                    this.vezesFilosofo1Comeu++;
                    this.QuantidadeVezesFilosofo1Comeu.setText(String.valueOf(this.vezesFilosofo1Comeu));
                } else {
                    this.Filosofo1.setBackground(faminto);
                    this.EstadoFilosofo1.setText("Faminto");
                }
            }
        } else { //filosofo 2
            if (identificador == 2) { //filosofo2
            this.quantidadeTemposEsperaF2++;
           
                double tempoSemComer;
                //Usado para calcular o tempo de espera
                if (estatus == 1) {
                    this.tempoQuandoComeFilosofo2 = System.currentTimeMillis();
                } else {
                    if (this.tempoQuandoComeFilosofo2 != 0) {
                        tempoSemComer = tempo - this.tempoQuandoComeFilosofo2;
                    } else {
                        tempoSemComer = tempo - this.inicioAplicacao;
                    }
                    double seg = (tempoSemComer);
                    this.TempoEsperaFilosofo2.setText(String.valueOf(seg));
                    this.tempoEsperaTotalFiloso2 = this.tempoEsperaTotalFiloso2 + seg;
                    DecimalFormat df = new DecimalFormat("0.000");
                    this.TempoMedioSemComerFilosofo2.setText(df.format(this.tempoEsperaTotalFiloso2/this.quantidadeTemposEsperaF2));
                    //Maior tempo de espera registrado
                    if (seg > this.tempoEsperaMaximoFilosofo2) {
                        this.tempoEsperaMaximoFilosofo2 = seg;
                    }

                    //Maior média registrada de tempo de espera
                    if ((this.tempoEsperaTotalFiloso2 / this.quantidadeTemposEsperaF2) > this.maiorTempoMedioEsperaFilosofo2) {
                        this.maiorTempoMedioEsperaFilosofo2 = (this.tempoEsperaTotalFiloso2/this.quantidadeTemposEsperaF2);
                    }
                }

                if (estatus == 0) { // pensando
                    this.Filosofo2.setBackground(pensando);
                    this.EstadoFilosofo2.setText("Pensando");
                } else {
                    if (estatus == 1) {
                        this.Filosofo2.setBackground(comendo);
                        this.EstadoFilosofo2.setText("Comendo");
                        this.vezesFilosofo2Comeu++;
                        this.QuantidadeVezesFilosofo2Comeu.setText(String.valueOf(this.vezesFilosofo2Comeu));
                    } else {
                        this.Filosofo2.setBackground(faminto);
                        this.EstadoFilosofo2.setText("Faminto");
                    }
                }
            } else { //filosofo 3
                if (identificador == 3) {
                     this.quantidadeTemposEsperaF3++;
           //filosofo 3
                    double tempoSemComer;
                    //usado para calcular o tempo de espera
                    if (estatus == 1) {
                        this.tempoQuandoComeFilosofo3 = System.currentTimeMillis();
                    } else {
                        if (this.tempoQuandoComeFilosofo3 != 0) {
                            tempoSemComer = tempo - this.tempoQuandoComeFilosofo3;
                        } else {
                            tempoSemComer = tempo - this.inicioAplicacao;
                        }
                        double seg = (tempoSemComer);
                        this.TempoEsperaFilosofo3.setText(String.valueOf(seg));
                        this.tempoEsperaTotalFiloso3 = this.tempoEsperaTotalFiloso3 + seg;
                        DecimalFormat df = new DecimalFormat("0.000");
                        this.TempoMedioSemComerFilosofo3.setText(df.format(this.tempoEsperaTotalFiloso3 / this.quantidadeTemposEsperaF3));
                        //Maior tempo de espera registrado
                        if (seg > this.tempoEsperaMaximoFilosofo3) {
                            this.tempoEsperaMaximoFilosofo3 = seg;
                        }

                        //Maior média registrada de tempo de espera
                        if ((this.tempoEsperaTotalFiloso3 / this.quantidadeTemposEsperaF3) > this.maiorTempoMedioEsperaFilosofo3) {
                            this.maiorTempoMedioEsperaFilosofo3 = (this.tempoEsperaTotalFiloso3 / this.quantidadeTemposEsperaF3);
                        }

                    }
                    if (estatus == 0) { // pensando
                        this.Filosofo3.setBackground(pensando);
                        this.EstadoFilosofo3.setText("Pensando");

                    } else {
                        if (estatus == 1) {
                            this.Filosofo3.setBackground(comendo);
                            this.EstadoFilosofo3.setText("Comendo");
                            this.vezesFilosofo3Comeu++;
                            this.QuantidadeVezesFilosofo3Comeu.setText(String.valueOf(this.vezesFilosofo3Comeu));

                        } else {
                            this.Filosofo3.setBackground(faminto);
                            this.EstadoFilosofo3.setText("Faminto");
                        }
                    }
                } else { //filosofo 4
                    if (identificador == 4) {
 this.quantidadeTemposEsperaF4++;
           
                        double tempoSemComer;
                        //usado para calcular tempo de espera
                        if (estatus == 1) {
                            this.tempoQuandoComeFilosofo4 = System.currentTimeMillis();
                        } else {
                            if (this.tempoQuandoComeFilosofo4 != 0) {
                                tempoSemComer = tempo - this.tempoQuandoComeFilosofo4;
                            } else {
                                tempoSemComer = tempo - this.inicioAplicacao;
                            }
                            double seg = (tempoSemComer);
                            this.TempoEsperaFilosofo4.setText(String.valueOf(seg));
                            this.tempoEsperaTotalFiloso4 = this.tempoEsperaTotalFiloso4 + seg;
                            DecimalFormat df = new DecimalFormat("0.000");
                            this.TempoMedioSemComerFilosofo4.setText(df.format(this.tempoEsperaTotalFiloso4 /this.quantidadeTemposEsperaF4));
                            //Maior tempo de espera registrado
                            if (seg > this.tempoEsperaMaximoFilosofo4) {
                                this.tempoEsperaMaximoFilosofo4 = seg;
                            }

                            //Maior média registrada de tempo de espera
                            if ((this.tempoEsperaTotalFiloso4 / this.quantidadeTemposEsperaF4) > this.maiorTempoMedioEsperaFilosofo4) {
                                this.maiorTempoMedioEsperaFilosofo4 = (this.tempoEsperaTotalFiloso4 /  this.quantidadeTemposEsperaF4);
                            }


                        }


                        if (estatus == 0) { // pensando
                            this.Filosofo4.setBackground(pensando);
                            this.EstadoFilosofo4.setText("Pensando");
                        } else {
                            if (estatus == 1) {
                                this.Filosofo4.setBackground(comendo);
                                this.EstadoFilosofo4.setText("Comendo");
                                this.vezesFilosofo4Comeu++;
                                this.QuantidadeVezesFilosofo4Comeu.setText(String.valueOf(this.vezesFilosofo4Comeu));
                            } else {
                                this.Filosofo4.setBackground(faminto);
                                this.EstadoFilosofo4.setText("Faminto");
                            }
                        }

                    } else { //filosofo 5
                        double tempoSemComer;
                         this.quantidadeTemposEsperaF5++;
           
                        //usado para calcular tempo de espera
                        if (estatus == 1) {
                            this.tempoQuandoComeFilosofo5 = System.currentTimeMillis();
                        } else {
                            if (this.tempoQuandoComeFilosofo5 != 0) {
                                tempoSemComer = tempo - this.tempoQuandoComeFilosofo5;
                            } else {
                                tempoSemComer = tempo - this.inicioAplicacao;
                            }
                            double seg = (tempoSemComer);
                            this.TempoEsperaFilosofo5.setText(String.valueOf(seg));
                            this.tempoEsperaTotalFiloso5 = this.tempoEsperaTotalFiloso5 + seg;
                            DecimalFormat df = new DecimalFormat("0.000");
                            this.TempoMedioSemComerFilosofo5.setText(df.format(this.tempoEsperaTotalFiloso5 /  this.quantidadeTemposEsperaF5));
                            //Maior tempo de espera registrado
                            if (seg > this.tempoEsperaMaximoFilosofo5) {
                                this.tempoEsperaMaximoFilosofo5 = seg;
                            }

                            //Maior média registrada de tempo de espera
                            if ((this.tempoEsperaTotalFiloso5 /  this.quantidadeTemposEsperaF5) > this.maiorTempoMedioEsperaFilosofo5) {
                                this.maiorTempoMedioEsperaFilosofo5 = (this.tempoEsperaTotalFiloso5 /  this.quantidadeTemposEsperaF5);
                            }

                        }

                        if (estatus == 0) { // pensando
                            this.Filosofo5.setBackground(pensando);
                            this.EstadoFilosofo5.setText("Pensando");
                        } else {
                            if (estatus == 1) {
                                this.Filosofo5.setBackground(comendo);
                                this.EstadoFilosofo5.setText("Comendo");
                                this.vezesFilosofo5Comeu++;
                                this.QuantidadeVezesFilosofo5Comeu.setText(String.valueOf(this.vezesFilosofo5Comeu));
                            } else {
                                this.Filosofo5.setBackground(faminto);
                                this.EstadoFilosofo5.setText("Faminto");
                            }
                        }


                    }

                }

            }
        }
        
        System.out.println("+++++++++++++++++++++++++++++++++++++++");
        System.out.println("Relatorio De Dados a Cada Processamento");
        System.out.println("Quantidade de Vezes que comeu");
        System.out.println("Filósofo1: "+ this.vezesFilosofo1Comeu);
        System.out.println("Filósofo2: "+ this.vezesFilosofo2Comeu);
        System.out.println("Filósofo3: "+ this.vezesFilosofo3Comeu);
        System.out.println("Filósofo4: "+ this.vezesFilosofo4Comeu);
        System.out.println("Filósofo5: "+ this.vezesFilosofo5Comeu);        
        System.out.println("Maior tempo por Espera");
        System.out.println("Filósofo1: "+ this.tempoEsperaMaximoFilosofo1);
        System.out.println("Filósofo2: "+ this.tempoEsperaMaximoFilosofo2);
        System.out.println("Filósofo3: "+ this.tempoEsperaMaximoFilosofo3);
        System.out.println("Filósofo4: "+ this.tempoEsperaMaximoFilosofo4);
        System.out.println("Filósofo5: "+ this.tempoEsperaMaximoFilosofo5);
        System.out.println("Maior Média de tempo por Espera");
        System.out.println("Filósofo1: "+ this.maiorTempoMedioEsperaFilosofo1);
        System.out.println("Filósofo2: "+ this.maiorTempoMedioEsperaFilosofo2);
        System.out.println("Filósofo3: "+ this.maiorTempoMedioEsperaFilosofo3);
        System.out.println("Filósofo4: "+ this.maiorTempoMedioEsperaFilosofo4);
        System.out.println("Filósofo5: "+ this.maiorTempoMedioEsperaFilosofo5);
        System.out.println("+++++++++++++++++++++++++++++++++++++++++");
        
    }
}
